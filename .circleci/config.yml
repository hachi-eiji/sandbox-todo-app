version: 2

references:
  cached_gem_name: &cached_gem_name
    gem-cache-v1-{{ checksum "Gemfile.lock" }}
  restore_bundle_cache: &restore_bundle_cache
    restore_cache:
      keys:
        - *cached_gem_name
        - gem-cache-v1
  cached_npm_name: &cached_npm_name
    npm-cache-v1-{{ checksum "client/package-lock.json" }}
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      keys:
        - *cached_npm_name
        - npm-cache-v1

jobs:
  deploy:
    docker:
      - image: circleci/ruby:2.4-node-browsers
    environment:
      - RAILS_ENV: production
    steps:
      - checkout
      - attach_workspace:
          at: .
      - *restore_bundle_cache
      - run: bundle install -j 3 --path vendor/bundle
      - run:
          command: ls -l public # ここは確認用

  server_test:
    docker:
      - image: circleci/ruby:2.4-node-browsers
        environment:
          MYSQL_USER: 'root'
          MYSQL_PASSWORD: 'root'
          MYSQL_HOST: 127.0.0.1
          RAILS_ENV: test
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: 'root'
          MYSQL_DATABASE: sandbox-todo-app_test
      - image: redis
    environment:
      - RAILS_ENV: test
    steps:
      - checkout
      - *restore_bundle_cache
      - run: bundle install -j 3 --path vendor/bundle
      - save_cache:
          key: *cached_gem_name
          paths:
            - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: make reset_test_db
      - type: shell
        command: |
          bin/rspec spec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings --timings-type=filename)

  client_test:
    docker:
      - image: circleci/node:8.12-browsers
    steps:
      - checkout
      - *restore_npm_cache
      - run:
          working_directory: client
          command: npm install
      - save_cache:
          key: *cached_npm_name
          paths:
            - client/node_modules
      - run:
          working_directory: client
          command: npm test
      - persist_to_workspace:
          root: .
          paths:
            - client
  client_build:
    docker:
      - image: circleci/node:8.12-browsers
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: client
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - public

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - server_test
      - client_test
      - client_build:
          requires:
            - client_test
      - deploy:
          requires:
            - server_test
            - client_build
